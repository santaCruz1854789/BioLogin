{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Biometric Systems/BioWIP/photo-capture/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const [image, setImage] = useState('');\n  const getVideo = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"user\"\n      }\n    }).then(stream => {\n      let video = videoRef.current;\n      video.srcObject = stream;\n      video.play();\n    }).catch(err => {\n      console.error(\"Error accessing the camera: \", err);\n    });\n  };\n  const takePhoto = () => {\n    const width = 640;\n    const height = 480;\n    let video = videoRef.current;\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    let ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, width, height);\n    const imageData = canvas.toDataURL('image/png');\n    setImage(imageData);\n  };\n  const uploadPhoto = () => {\n    if (!image) {\n      alert(\"No image captured.\");\n      return;\n    }\n    axios.post('http://loalhost:5000/upload', {\n      image: image\n    }).then(response => alert('Upload successful ' + response.data.path)).catch(err => alert('Upload failed: ' + err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Camera Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getVideo,\n      children: \"Activate Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: takePhoto,\n      children: \"Capture Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadPhoto,\n      children: \"Upload photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Captured\",\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zwUZ5YK0IoRAhepS8hNkkSZ9VAw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","App","_s","videoRef","image","setImage","getVideo","navigator","mediaDevices","getUserMedia","video","facingMode","then","stream","current","srcObject","play","catch","err","console","error","takePhoto","width","height","canvas","document","createElement","ctx","getContext","drawImage","imageData","toDataURL","uploadPhoto","alert","post","response","data","path","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","src","alt","style","_c","$RefreshReg$"],"sources":["/home/alexander/Desktop/Biometric Systems/BioWIP/photo-capture/src/App.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const videoRef = useRef(null);\n  const [image, setImage] = useState('');\n\n  const getVideo = () => {\n    navigator.mediaDevices.\n    getUserMedia({video: { facingMode: \"user\"}})\n    .then(stream => {\n      let video = videoRef.current;\n      video.srcObject = stream;\n      video.play();\n    })\n    .catch(err => {\n      console.error(\"Error accessing the camera: \", err);\n    });\n  };\n\n  const takePhoto = () => {\n    const width = 640;\n    const height = 480;\n    let video = videoRef.current;\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    let ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, width, height);\n    const imageData = canvas.toDataURL('image/png');\n    setImage(imageData);\n  };\n\n  const uploadPhoto = () => {\n    if (!image) {\n      alert(\"No image captured.\");\n      return;\n    }\n    axios.post('http://loalhost:5000/upload', { image:image })\n    .then(response => alert('Upload successful ' + response.data.path))\n    .catch(err => alert('Upload failed: ' + err));\n  };\n\n  return (\n    <div>\n      <h1>Camera Feed</h1>\n      <video ref={videoRef}></video>\n      <br />\n      <button onClick={getVideo}>Activate Camera</button>\n      <button onClick={takePhoto}>Capture Photo</button>\n      <button onClick={uploadPhoto}>Upload photo</button>\n      <br />\n      {image && <img src={image} alt=\"Captured\" style={{ width: '100%' }} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}