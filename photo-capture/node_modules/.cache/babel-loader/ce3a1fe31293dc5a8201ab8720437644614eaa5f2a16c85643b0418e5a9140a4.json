{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Biometric Systems/BioWIP/photo-capture/src/Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registration() {\n  _s();\n  const videoRef = useRef(null);\n  const [stream, setStream] = useState(null); // To hold the media stream\n  const [photos, setPhotos] = useState([]); // Array to hold photo data URLs\n  const [cameraActive, setCameraActive] = useState(false); // To toggle camera use\n  const navigate = useNavigate();\n  const getVideo = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"user\"\n      }\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n      setStream(stream);\n      setCameraActive(true); // Camera is now active\n    }).catch(err => {\n      console.error(\"Error accessing the camera: \", err);\n    });\n  };\n  const takePhoto = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 640;\n    canvas.height = 480;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    const imageData = canvas.toDataURL('image/png');\n\n    // Update the photos array, cycling through slots if three already taken\n    setPhotos(oldPhotos => {\n      const newPhotos = [...oldPhotos, imageData];\n      if (newPhotos.length > 3) {\n        newPhotos.shift(); // Remove the oldest photo\n      }\n      return newPhotos;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (photos.length < 3) {\n      alert('Please capture at least three photos.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/register', {\n        name,\n        surname,\n        photo1: photos[0],\n        photo2: photos[1],\n        photo3: photos[2]\n      });\n      alert('User registered successfully: ' + response.data.message);\n      navigate('/'); // Navigate to main page after registration\n    } catch (error) {\n      console.error('Registration failed:', error);\n      alert('Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cameraActive ? takePhoto : getVideo,\n          children: cameraActive ? 'Take Photo' : 'Activate Camera'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), photos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo,\n        alt: `Captured ${index}`,\n        style: {\n          width: '100px',\n          height: '100px'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Registration, \"lxcfDzGXnHukAmuz/abp6m/sDAc=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useRef","useState","axios","useNavigate","jsxDEV","_jsxDEV","Registration","_s","videoRef","stream","setStream","photos","setPhotos","cameraActive","setCameraActive","navigate","getVideo","navigator","mediaDevices","getUserMedia","video","facingMode","then","current","srcObject","play","catch","err","console","error","takePhoto","canvas","document","createElement","width","height","ctx","getContext","drawImage","imageData","toDataURL","oldPhotos","newPhotos","length","shift","handleSubmit","e","preventDefault","alert","response","post","name","surname","photo1","photo2","photo3","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","style","onClick","map","photo","index","src","alt","type","_c","$RefreshReg$"],"sources":["/home/alexander/Desktop/Biometric Systems/BioWIP/photo-capture/src/Registration.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Registration() {\n    const videoRef = useRef(null);\n    const [stream, setStream] = useState(null); // To hold the media stream\n    const [photos, setPhotos] = useState([]); // Array to hold photo data URLs\n    const [cameraActive, setCameraActive] = useState(false); // To toggle camera use\n    const navigate = useNavigate();\n\n    const getVideo = () => {\n        navigator.mediaDevices.getUserMedia({ video: { facingMode: \"user\" } })\n        .then(stream => {\n            videoRef.current.srcObject = stream;\n            videoRef.current.play();\n            setStream(stream);\n            setCameraActive(true); // Camera is now active\n        })\n        .catch(err => {\n            console.error(\"Error accessing the camera: \", err);\n        });\n    };\n\n    const takePhoto = () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = 640;\n        canvas.height = 480;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n        const imageData = canvas.toDataURL('image/png');\n        \n        // Update the photos array, cycling through slots if three already taken\n        setPhotos(oldPhotos => {\n            const newPhotos = [...oldPhotos, imageData];\n            if (newPhotos.length > 3) {\n                newPhotos.shift(); // Remove the oldest photo\n            }\n            return newPhotos;\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (photos.length < 3) {\n            alert('Please capture at least three photos.');\n            return;\n        }\n        try {\n            const response = await axios.post('http://localhost:5000/register', {\n                name,\n                surname,\n                photo1: photos[0],\n                photo2: photos[1],\n                photo3: photos[2]\n            });\n            alert('User registered successfully: ' + response.data.message);\n            navigate('/'); // Navigate to main page after registration\n        } catch (error) {\n            console.error('Registration failed:', error);\n            alert('Registration failed');\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>User Registration</h1>\n            <form onSubmit={handleSubmit}>\n                <video ref={videoRef} style={{ width: '100%' }}></video>\n                <div>\n                    <button onClick={cameraActive ? takePhoto : getVideo}>\n                        {cameraActive ? 'Take Photo' : 'Activate Camera'}\n                    </button>\n                </div>\n                {photos.map((photo, index) => (\n                    <img key={index} src={photo} alt={`Captured ${index}`} style={{ width: '100px', height: '100px' }} />\n                ))}\n                <button type=\"submit\">Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Registration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}