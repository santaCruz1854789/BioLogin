{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Biometric Systems/BioWIP/photo-capture/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // using react-router for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const videoRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  const navigate = useNavigate();\n  const getVideo = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"user\"\n      }\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n      setStream(stream);\n    }).catch(err => {\n      console.error(\"Error accessing the camera: \", err);\n    });\n  };\n  const stopVideoStream = () => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n  };\n  const handleLogin = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 640;\n    canvas.height = 480;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    const imageData = canvas.toDataURL('image/png');\n    stopVideoStream(); // Stop camera after taking photo\n\n    axios.post('http://localhost:5000/login', {\n      image: imageData\n    }).then(response => {\n      navigate('/profile', {\n        state: {\n          user: response.data\n        }\n      }); // Navigate to profile page with user data\n    }).catch(error => {\n      console.error('Login failed:', error);\n      alert('Login failed');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getVideo,\n      children: \"Activate Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"UjPIJGOuh5AbL+rDlPC+LYRuCFw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","videoRef","stream","setStream","navigate","getVideo","navigator","mediaDevices","getUserMedia","video","facingMode","then","current","srcObject","play","catch","err","console","error","stopVideoStream","getTracks","forEach","track","stop","handleLogin","canvas","document","createElement","width","height","ctx","getContext","drawImage","imageData","toDataURL","post","image","response","state","user","data","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","onClick","_c","$RefreshReg$"],"sources":["/home/alexander/Desktop/Biometric Systems/BioWIP/photo-capture/src/Login.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // using react-router for navigation\n\nfunction Login() {\n    const videoRef = useRef(null);\n    const [stream, setStream] = useState(null);\n    const navigate = useNavigate();\n\n    const getVideo = () => {\n        navigator.mediaDevices\n            .getUserMedia({ video: { facingMode: \"user\" } })\n            .then(stream => {\n                videoRef.current.srcObject = stream;\n                videoRef.current.play();\n                setStream(stream);\n            })\n            .catch(err => {\n                console.error(\"Error accessing the camera: \", err);\n            });\n    };\n\n    const stopVideoStream = () => {\n        if (stream) {\n            stream.getTracks().forEach(track => track.stop());\n            videoRef.current.srcObject = null;\n        }\n    };\n\n    const handleLogin = () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = 640;\n        canvas.height = 480;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n        const imageData = canvas.toDataURL('image/png');\n        stopVideoStream(); // Stop camera after taking photo\n\n        axios.post('http://localhost:5000/login', { image: imageData })\n            .then(response => {\n                navigate('/profile', { state: { user: response.data } }); // Navigate to profile page with user data\n            })\n            .catch(error => {\n                console.error('Login failed:', error);\n                alert('Login failed');\n            });\n    };\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <video ref={videoRef} style={{ width: '50%' }}></video>\n            <button onClick={getVideo}>Activate Camera</button>\n            <button onClick={handleLogin}>Login</button>\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}